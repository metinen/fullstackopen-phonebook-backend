{"version":3,"sources":["components/Filter.js","components/PersonsForm.js","components/PersonRecord.js","services/PersonService.js","components/Notification.js","App.js","index.js"],"names":["Filter","handleFilterChange","filterBy","value","onChange","PersonsForm","handleNameChange","handleNumberChange","handleSubmit","newName","newNumber","type","onClick","PersonRecord","person","handleRemoving","name","number","baseUrl","axios","get","then","response","data","newPerson","post","put","id","delete","Notification","message","isError","className","App","useState","persons","setPersons","setNewName","setNewNumber","setFilterBy","setMessage","setIsError","useEffect","PersonService","initialPersons","window","confirm","filter","e","setTimeout","personsToShow","toUpperCase","includes","event","preventDefault","target","existingPerson","find","updated","personsUpdated","map","catch","error","alert","concat","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0f8b246a.chunk.js","sourcesContent":["import React from 'react';\n\nconst Filter = ({handleFilterChange, filterBy}) => {\n    return (\n        <>\n            <div>Filter shown with</div>\n            <input value={filterBy} onChange={handleFilterChange} />\n        </>\n    );\n};\n\nexport default Filter;","import React from 'react';\n\nconst PersonsForm = ({ handleNameChange, handleNumberChange, handleSubmit, newName, newNumber }) => {\n    return (\n        <form>\n            <div>\n                name: <input value={newName} onChange={handleNameChange} />\n            </div>\n            <div>\n                number: <input value={newNumber} onChange={handleNumberChange} />\n            </div>\n            <div>\n                <button type=\"submit\" onClick={handleSubmit}>add</button>\n            </div>\n        </form>\n    );\n};\n\nexport default PersonsForm;","import React from 'react';\n\nconst PersonRecord = ({ person, handleRemoving }) => {\n    return (\n        <>\n            <li>{`${person.name}  ${person.number}`} <button onClick={() => handleRemoving(person)}>Delete</button></li>\n        </>\n    );\n};\n\nexport default PersonRecord;","import axios from 'axios'\r\n\r\nconst baseUrl = '/api/persons';\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl);\r\n    return request.then(response => response.data);\r\n}\r\n\r\nconst create = (newPerson) => {\r\n    const request = axios.post(baseUrl, newPerson);\r\n    return request.then(response => response.data);\r\n}\r\n\r\nconst update = (person) => {\r\n    const request = axios.put(`${baseUrl}/${person.id}`, person);\r\n    return request.then(response => response.data);\r\n}\r\n\r\nconst remove = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`);\r\n    return request.then(response => response.data);\r\n}\r\n\r\nexport default {\r\n    getAll: getAll,\r\n    create: create,\r\n    update: update,\r\n    remove: remove\r\n}\r\n\r\n","import React from 'react';\n\nconst Notification = ({ message, isError }) => {\n    if (message === null) {\n        return null\n    }\n\n    return (\n        <div className=\"notification\" id={isError && \"error\"}>\n            {message}\n        </div>\n    )\n}\n\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport PersonsForm from './components/PersonsForm'\nimport PersonRecord from './components/PersonRecord'\nimport PersonService from './services/PersonService'\nimport Notification from './components/Notification'\n\nconst App = () => {\n    const [persons, setPersons] = useState([])\n    const [newName, setNewName] = useState('')\n    const [newNumber, setNewNumber] = useState('')\n    const [filterBy, setFilterBy] = useState('')\n    const [message, setMessage] = useState(null)\n    const [isError, setIsError] = useState(false);\n\n    useEffect(() => {\n        PersonService.getAll().then(initialPersons => setPersons(initialPersons))\n    }, [])\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        const existingPerson = persons.find(e => e.name === newName);\n        if (existingPerson) {\n            if (existingPerson.number !== newNumber) {\n                if (window.confirm(`Are you sure you want to replace phone number of ${newName}?`)) {\n                    existingPerson.number = newNumber;\n                    PersonService.update(existingPerson).then(\n                        updated => {\n                            const personsUpdated = persons.map(e => e.id !== existingPerson.id ? e : updated)\n                            setPersons(personsUpdated);\n                            setMessage(`Phone number of ${existingPerson.name} is updated in phonebook`);\n                            setTimeout(() => setMessage(null), 5000)\n                        }\n                    ).catch(\n                        error => {\n                            setMessage(`Phone number of ${existingPerson.name} couldn't be updated`);\n                            setIsError(true);\n                            setPersons(persons.filter(e => e.id !== existingPerson.id));\n                            setTimeout(() => {\n                                setMessage(null);\n                                setIsError(false);\n                            }, 5000)\n                        }\n                    );\n                }\n            } else {\n                window.alert(`Record already exists for ${newName}`)\n            }\n        } else {\n            const person = { name: newName, number: newNumber }\n            PersonService.create(person)\n                .then(e => {\n                    setPersons(persons.concat(e));\n                    setMessage(`${person.name} is added to phonebook`);\n                    setTimeout(() => setMessage(null), 5000)\n                })\n                .catch(error => {\n                    setMessage(error.response.data.error);\n                    setIsError(true);\n                    setTimeout(() => {\n                        setMessage(null);\n                        setIsError(false);\n                    }, 5000)\n                });\n        }\n        setNewName('');\n        setNewNumber('');\n    }\n\n    const handleNameChange = (event) => {\n        event.preventDefault();\n        setNewName(event.target.value);\n    }\n\n    const handleNumberChange = (event) => {\n        event.preventDefault();\n        setNewNumber(event.target.value);\n    }\n\n    const handleFilterChange = (event) => {\n        event.preventDefault();\n        setFilterBy(event.target.value);\n    }\n\n    const handleRemoving = (person) => {\n        if (window.confirm(`Are you sure you want to remove ${person.name}`)) {\n            PersonService.remove(person.id);\n            setPersons(persons.filter(e => e.id !== person.id));\n            setMessage(`${person.name} is removed from phonebook`);\n            setTimeout(() => setMessage(null), 5000)\n        }\n    }\n\n    const personsToShow = filterBy ? persons.filter(e => e.name.toUpperCase().includes(filterBy.toUpperCase())) : persons\n\n    return (\n        <div>\n            <h2>Phonebook</h2>\n            <Filter handleFilterChange={handleFilterChange} filterBy={filterBy} />\n            <h2>Add new person</h2>\n            <PersonsForm handleNameChange={handleNameChange} handleNumberChange={handleNumberChange}\n                newNumber={newNumber} newName={newName} handleSubmit={handleSubmit} />\n            <h2>Numbers</h2>\n            <Notification message={message} isError={isError} />\n            <ul>{personsToShow.map(person =>\n                <PersonRecord key={person.name} person={person} handleRemoving={handleRemoving} />\n            )}\n            </ul>\n        </div>\n    )\n}\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}